update.packages(ask = FALSE, checkBuilt = TRUE)
tinytex::tlmgr_update()
tinytex::tlmgr_update()
--all
tinytex::tlmgr_update()
all
library(knitr)
data=read.csv("C:/Users/ilias/OneDrive/Bureau/AD/Poids_naissance.txt", sep=";")
attach(data)
kable(head(data),caption = "Extrait des données Poids Naissance")
#Matrice des données
data$LWT = round(data$LWT*0.45359237,3)  #transforme le poids de la mama en Kg
kable(head(data), caption = "Extrait des données avec chagement d'unité du poids de la mère")
decoup_age =cut(AGE, breaks =5)
kable(table(decoup_age), caption = "Tri à plat de l'age de la mère"
,col.names = c("classes","effectif"))
decoup_LWT = cut(data$LWT, breaks = 5)
kable(table(decoup_LWT), caption = "Tri à plat du poids de la mère",
col.names = c("classes","effectif"))
#Recodage de la variabe Race
RACE = factor(RACE)
levels(RACE)=c("Blanche","Noir","Autre")
kable(table(RACE), caption = "Tri à plat de la race de l'enfant",
col.names = c("","Effectif"))
SMOKE=factor(SMOKE)
levels(SMOKE)=c("Non", "Oui")
kable(table(SMOKE),
caption = "Tri à plat du tabagisme durant la grossesse",
col.names = c("","effectif"))
#scatterplot(i~yi(i,ech), regLine= TRUE, boxplot= F,smooth = FALSE)
plot(yi(i,ech)~i,pch= 3, col="blue"
,main = "nuage de points des yi en fonction de i", ylab = "yi", cex.main = 1)
i =1:100
yi = function(i,ech) {1.7+2.1*i + ech}
library(knitr)
data=read.csv("C:/Users/ilias/OneDrive/Bureau/AD/Poids_naissance.txt", sep=";")
attach(data)
kable(head(data),caption = "Extrait des données Poids Naissance")
#Matrice des données
data$LWT = round(data$LWT*0.45359237,3)  #transforme le poids de la mama en Kg
kable(head(data), caption = "Extrait des données avec chagement d'unité du poids de la mère")
decoup_age =cut(AGE, breaks =5)
kable(table(decoup_age), caption = "Tri à plat de l'age de la mère"
,col.names = c("classes","effectif"))
decoup_LWT = cut(data$LWT, breaks = 5)
kable(table(decoup_LWT), caption = "Tri à plat du poids de la mère",
col.names = c("classes","effectif"))
#Recodage de la variabe Race
RACE = factor(RACE)
levels(RACE)=c("Blanche","Noir","Autre")
kable(table(RACE), caption = "Tri à plat de la race de l'enfant",
col.names = c("","Effectif"))
SMOKE=factor(SMOKE)
levels(SMOKE)=c("Non", "Oui")
kable(table(SMOKE),
caption = "Tri à plat du tabagisme durant la grossesse",
col.names = c("","effectif"))
Mort.a <- c(93,53,72,68,68,53)
Années.de.carrière <- c(66,25,48,37,31,32)
Nombre.de.films <- c(211,58,98,140,74,81)
Prénom <- c("Michel",
"André",
"Jean" ,
"Louis" ,
"Lino",
"Jacques")
Nom <- c(
"Galabru"   ,
"Raimbourg",
"Gabin",
"De Funès",
"Ventura" ,
"Villeret")
Date.du.deces <- c("04-01-2016",
"23-09-1970",
"15-10-1976",
"27-01-1983",
"22-10-1987",
"28-01-2005")
acteur=data.frame(Mort.a,Années.de.carrière, Nombre.de.films,Prénom,Nom,Date.du.deces )
kable(acteur,caption = "Jeu de données acteur") #7
kable(acteur[4], caption = "Prénom du jeu de données acteur") #8
colnames(acteur)[1] = c("Age.du.décès")
acteur
kable(acteur[order(acteur$Age.du.décès),],
caption = "Donnée acteur trié par l'age du décès") #9
w =read.delim("C:/Users/ilias/OneDrive/Bureau/AD/fromage.txt")
attach(w)
kable(head(w), caption = "Extrait du jeu de donnée fromage") #10
X1
dim(w)
str(w)
attributes(w)
kable(summary(w),
caption = "Statistiques élémentaires des données fromage") #11
pairs(w, main= "Matrice des nuages de points", cex.main =1)
ww<- w[X1 > 5.1 & X3 < 1.77,]
kable(head(ww), caption = "Extrait des données fromage filtré") #12
dim(ww)
str(ww)
attributes(ww)
kable(summary(ww),
caption = "Statistiques élémentaires des données fromage filtrées") #13
data = airquality
#?airquality
attach(data)
kable(head(data), caption = "Extrait des données airquality") #14
names(data)
dim(data)
kable(summary(data[1:4]),
caption = "Statistique élémentaire des données airquality") #15
plot(Ozone~factor(Month),col=c(2:6),
main="boîte à moustaches de la variable Ozone pour chaque mois"
,cex.main = 1,xlab = "Mois" )
data$saison =factor(Month)
levels(data$saison )
levels(data$saison)[5]="automne"
levels(data$saison)[1] ="printemps"
levels(data$saison)[2:4]="été"
kable(head(data),
caption = "Extrait des données airquality avec la saison") #16
library("car")
scatterplot(Ozone~Temp|saison, data = data,
regLine =FALSE, grid =F,smooth = FALSE, legend = FALSE,
main ="Ozone en fonction des saisons", cex.main =1,
col=c("blue","green","red"),pch=c(3,2,1),xlab = "Temps")
legend("topleft",levels(data$saison),cex=.8,col=c("blue","green","red"),pch=c(3,2,1), text.font=4)
ech = rnorm(100,1,5)
i =1:100
yi = function(i,ech) {1.7+2.1*i + ech}
#scatterplot(i~yi(i,ech), regLine= TRUE, boxplot= F,smooth = FALSE)
plot(yi(i,ech)~i,pch= 3, col="blue"
,main = "nuage de points des yi en fonction de i", ylab = "yi", cex.main = 1)
abline(lm(yi(i,ech)~i), col = "red")
colCheveaux<-c(rep("brun",68+15+5+20),
rep("chatin",119+54+29+84),
rep("roux",26+14+14+17),
rep("blond",7+10+16+94))
colYeux<-c(rep("marron",68),rep("noissette", 15), rep("vert",5),rep("bleu",20),
rep("marron",119),rep("noissette", 54), rep("vert",29),rep("bleu",84),
rep("marron",26),rep("noissette", 14), rep("vert",14),rep("bleu",17),
rep("marron",7),rep("noissette", 10), rep("vert",16),rep("bleu",94))
femme =data.frame(colCheveaux,colYeux)
n =length(femme[,2])
# matrix()
# colnames()
# row.names()
#Tableau des effectifs croisés (de contingence)
TEC=table(femme$colYeux,femme$colCheveaux)
kable(TEC)
#Tableau des frequence croisés
TFC=round(prop.table(table(femme$colYeux,femme$colCheveaux)),2)
kable(TFC)
#lois marginales de la couleur des yeux
c =addmargins(TEC, FUN = sum)[-5,5]
kable(c)
#lois marginales de la couleur des cheveux
r=addmargins(TEC, FUN = sum)[5,-5]
kable(r)
#Distribution conditionnelle des couleur des cheveux sachant la couleur des yeux
C =sweep(TEC, MARGIN=1,STATS = c,FUN = "/")
C =round(addmargins(C,FUN =sum),2)[-5,]
C=C*c
kable(C)
#Distribution conditionnelle des couleur des yeux sachant la couleur des cheveux
R =sweep(TEC, MARGIN=2,STATS = r,FUN = "/")
R =round(addmargins(R,FUN =sum),2)[,-5]
R=R*r
kable(R)
#Tableau des effectifs theoriques
TET =round(chisq.test(TEC)$expected,2)
kable(TET)
#matrice taux de liaison
#Test du khi2
chisq.test(TEC)
library(knitr)
library(car)
data=read.csv("C:/Users/ilias/OneDrive/Bureau/AD/Poids_naissance.txt", sep=";")
attach(data)
kable(head(data),caption = "Extrait des données Poids Naissance")
#Matrice des données
data$LWT = round(data$LWT*0.45359237,3)  #transforme le poids de la mama en Kg
kable(head(data), caption = "Extrait des données avec chagement d'unité du poids de la mère")
decoup_age =cut(AGE, breaks =5)
kable(table(decoup_age), caption = "Tri à plat de l'age de la mère"
,col.names = c("classes","effectif"))
decoup_LWT = cut(data$LWT, breaks = 5)
kable(table(decoup_LWT), caption = "Tri à plat du poids de la mère",
col.names = c("classes","effectif"))
#Recodage de la variabe Race
RACE = factor(RACE)
levels(RACE)=c("Blanche","Noir","Autre")
kable(table(RACE), caption = "Tri à plat de la race de l'enfant",
col.names = c("","Effectif"))
SMOKE=factor(SMOKE)
levels(SMOKE)=c("Non", "Oui")
kable(table(SMOKE),
caption = "Tri à plat du tabagisme durant la grossesse",
col.names = c("","effectif"))
Mort.a <- c(93,53,72,68,68,53)
Années.de.carrière <- c(66,25,48,37,31,32)
Nombre.de.films <- c(211,58,98,140,74,81)
Prénom <- c("Michel",
"André",
"Jean" ,
"Louis" ,
"Lino",
"Jacques")
Nom <- c(
"Galabru"   ,
"Raimbourg",
"Gabin",
"De Funès",
"Ventura" ,
"Villeret")
Date.du.deces <- c("04-01-2016",
"23-09-1970",
"15-10-1976",
"27-01-1983",
"22-10-1987",
"28-01-2005")
acteur=data.frame(Mort.a,Années.de.carrière, Nombre.de.films,Prénom,Nom,Date.du.deces )
kable(acteur,caption = "Jeu de données acteur") #7
kable(acteur[4], caption = "Prénom du jeu de données acteur") #8
colnames(acteur)[1] = c("Age.du.décès")
acteur
kable(acteur[order(acteur$Age.du.décès),],
caption = "Donnée acteur trié par l'age du décès") #9
w =read.delim("C:/Users/ilias/OneDrive/Bureau/AD/fromage.txt")
attach(w)
kable(head(w), caption = "Extrait du jeu de donnée fromage") #10
X1
dim(w)
str(w)
attributes(w)
kable(summary(w),
caption = "Statistiques élémentaires des données fromage") #11
pairs(w, main= "Matrice des nuages de points", cex.main =1)
ww<- w[X1 > 5.1 & X3 < 1.77,]
kable(head(ww), caption = "Extrait des données fromage filtré") #12
dim(ww)
str(ww)
attributes(ww)
kable(summary(ww),
caption = "Statistiques élémentaires des données fromage filtrées") #13
data = airquality
#?airquality
attach(data)
kable(head(data), caption = "Extrait des données airquality") #14
names(data)
dim(data)
kable(summary(data[1:4]),
caption = "Statistique élémentaire des données airquality") #15
plot(Ozone~factor(Month),col=c(2:6),
main="boîte à moustaches de la variable Ozone pour chaque mois"
,cex.main = 1,xlab = "Mois" )
data$saison =factor(Month)
levels(data$saison )
levels(data$saison)[5]="automne"
levels(data$saison)[1] ="printemps"
levels(data$saison)[2:4]="été"
kable(head(data),
caption = "Extrait des données airquality avec la saison") #16
scatterplot(Ozone~Temp|saison, data = data,
regLine =FALSE, grid =F,smooth = FALSE, legend = FALSE,
main ="Ozone en fonction des saisons", cex.main =1,
col=c("blue","green","red"),pch=c(3,2,1),xlab = "Temps")
legend("topleft",levels(data$saison),cex=.8,col=c("blue","green","red"),pch=c(3,2,1), text.font=4)
ech = rnorm(100,1,5)
i =1:100
yi = function(i,ech) {1.7+2.1*i + ech}
#scatterplot(i~yi(i,ech), regLine= TRUE, boxplot= F,smooth = FALSE)
plot(yi(i,ech)~i,pch= 3, col="blue"
,main = "nuage de points des yi en fonction de i", ylab = "yi", cex.main = 1)
abline(lm(yi(i,ech)~i), col = "red")
colCheveaux<-c(rep("brun",68+15+5+20),
rep("chatin",119+54+29+84),
rep("roux",26+14+14+17),
rep("blond",7+10+16+94))
colYeux<-c(rep("marron",68),rep("noissette", 15), rep("vert",5),rep("bleu",20),
rep("marron",119),rep("noissette", 54), rep("vert",29),rep("bleu",84),
rep("marron",26),rep("noissette", 14), rep("vert",14),rep("bleu",17),
rep("marron",7),rep("noissette", 10), rep("vert",16),rep("bleu",94))
femme =data.frame(colCheveaux,colYeux)
n =length(femme[,2])
# matrix()
# colnames()
# row.names()
#Tableau des effectifs croisés (de contingence)
TEC=table(femme$colYeux,femme$colCheveaux)
kable(TEC)
#Tableau des frequence croisés
TFC=round(prop.table(table(femme$colYeux,femme$colCheveaux)),2)
kable(TFC)
#lois marginales de la couleur des yeux
c =addmargins(TEC, FUN = sum)[-5,5]
kable(c)
#lois marginales de la couleur des cheveux
r=addmargins(TEC, FUN = sum)[5,-5]
kable(r)
#Distribution conditionnelle des couleur des cheveux sachant la couleur des yeux
C =sweep(TEC, MARGIN=1,STATS = c,FUN = "/")
C =round(addmargins(C,FUN =sum),2)[-5,]
C=C*c
kable(C)
#Distribution conditionnelle des couleur des yeux sachant la couleur des cheveux
R =sweep(TEC, MARGIN=2,STATS = r,FUN = "/")
R =round(addmargins(R,FUN =sum),2)[,-5]
R=R*r
kable(R)
#Tableau des effectifs theoriques
TET =round(chisq.test(TEC)$expected,2)
kable(TET)
#matrice taux de liaison
#Test du khi2
chisq.test(TEC)
#Tableau des effectifs croisés (de contingence)
TEC=table(femme$colYeux,femme$colCheveaux)
kable(TEC)
#Tableau des frequence croisés
TFC=round(prop.table(table(femme$colYeux,femme$colCheveaux)),2)
kable(TFC)
#lois marginales de la couleur des yeux
c =addmargins(TEC, FUN = sum)[-5,5]
kable(c)
#lois marginales de la couleur des yeux
c =addmargins(TEC, FUN = sum)[-5,5]
c
#lois marginales de la couleur des cheveux
r=addmargins(TEC, FUN = sum)[5,-5]
kable(r)
#lois marginales de la couleur des cheveux
addmargins(TEC, FUN = sum)[5,-5]
#lois marginales de la couleur des cheveux
addmargins(TEC, FUN = sum)[5,-5]
#lois marginales de la couleur des cheveux
addmargins(TEC, FUN = sum)
#lois marginales de la couleur des cheveux
kable(addmargins(TEC, FUN = sum))
#lois marginales de la couleur des cheveux
r=addmargins(TEC, FUN = sum)[5,-5]
kable(r)
kable(addmargins(TEC, FUN = sum))
#Distribution conditionnelle des couleur des cheveux sachant la couleur des yeux
C =sweep(TEC, MARGIN=1,STATS = c,FUN = "/")
C =round(addmargins(C,FUN =sum),2)[-5,]
C=C*c
kable(C)
#lois marginales de la couleur des cheveux
r=addmargins(TEC, FUN = sum)[5,-5]
plot(data_airquality$Temp, data_airquality$Ozone, pch = c(3,14,2)[data_airquality$saison], col = c('blue', 'red', 'green')[data_airquality$saison], xlab = "Temps", ylab = "Ozone", main = "Ozone en fonction des saisons")
plot(data$Temp, data$Ozone, pch = c(3,14,2)[data$saison], col = c('blue', 'red', 'green')[data$saison], xlab = "Temps", ylab = "Ozone", main = "Ozone en fonction des saisons")
legend(x = 'topleft', legend = c("automne", "été", "printemps"), pch = c(14,2,3), col = c('red', 'green', 'blue'))
scatterplot(Ozone~Temp|saison, data = data,
regLine =FALSE, grid =F,smooth = FALSE, legend = FALSE,
main ="Ozone en fonction des saisons", cex.main =1,
col=c("blue","green","red"),pch=c(3,2,1),xlab = "Temps")
legend("topleft",levels(data$saison),cex=.8,col=c("blue","green","red"),pch=c(3,2,1), text.font=4)
#Tableau des effectifs croisés (de contingence)
TEC=table(femme$colYeux,femme$colCheveaux)
kable(TEC)
#Tableau des effectifs croisés (de contingence)
TEC=table(femme$colYeux,femme$colCheveaux)
kable(TEC, caption = "Tableau de contingence du croisement entre couleur des yeux et des cheuveux")
#Tableau des frequence croisés
TFC=round(prop.table(table(femme$colYeux,femme$colCheveaux)),2)
kable(TFC)
kable(addmargins(TEC, FUN = sum))
kable(addmargins(TEC, FUN = sum))
#Distribution conditionnelle des couleur des cheveux sachant la couleur des yeux
C =sweep(TEC, MARGIN=1,STATS = c,FUN = "/")
C =round(addmargins(C,FUN =sum),2)[-5,]
C=C*c
kable(C)
#Distribution conditionnelle des couleur des cheveux sachant la couleur des yeux
C =sweep(TEC, MARGIN=1,STATS = c,FUN = "/")
C =round(addmargins(C,FUN =sum),2)[-5,]
C=C
kable(C)
#Distribution conditionnelle des couleur des cheveux sachant la couleur des yeux
C =sweep(TEC, MARGIN=1,STATS = c,FUN = "/")
C =round(addmargins(C,FUN =sum),2)[-5,]
kable(C)
#Distribution conditionnelle des couleur des cheveux sachant la couleur des yeux
C =sweep(TEC, MARGIN=1,STATS = c,FUN = "/")*100
C =round(addmargins(C,FUN =sum),2)[-5,]
kable(C)
#Distribution conditionnelle des couleur des cheveux sachant la couleur des yeux
C =sweep(TEC, MARGIN=1,STATS = c,FUN = "/")*100
C =round(addmargins(C,FUN =sum),2)[-5,]
kable(C, caption = "Distribution conditionnelle des couleur des cheveux sachant la couleur des yeux") #20
#Tableau des frequence croisés
TFC=round(prop.table(table(femme$colYeux,femme$colCheveaux)),2)
kable(TFC, caption = " matrice des fréquences du croisement entre couleur des yeux et des cheuveux") #18
#Tableau des effectifs croisés (de contingence)
TEC=table(femme$colYeux,femme$colCheveaux)
kable(TEC, caption = "Tableau de contingence du croisement entre couleur des yeux et des cheuveux") #17
#Tableau des frequence croisés
TFC=round(prop.table(table(femme$colYeux,femme$colCheveaux)),2)*100
kable(TFC, caption = " matrice des fréquences du croisement entre couleur des yeux et des cheuveux") #18
kable(addmargins(TEC, FUN = sum), caption = "Tableau de contingence avec les marges") #19
#matrice taux de liaison
cor(TEC)
#matrice taux de liaison
round(cor(TEC),3)
#Distribution conditionnelle des couleur des yeux sachant la couleur des cheveux
R =sweep(TEC, MARGIN=2,STATS = r,FUN = "/")*100
R =round(addmargins(R,FUN =sum),2)[,-5]
R=R
kable(R) #21
#Distribution conditionnelle des couleur des cheveux sachant la couleur des yeux
C =sweep(TEC, MARGIN=1,STATS = c,FUN = "/")*100
C =round(addmargins(C,FUN =sum),2)[-5,]
kable(C, caption = "Distribution conditionnelle des couleur des cheveux sachant la couleur des yeux") #20
#Distribution conditionnelle des couleur des yeux sachant la couleur des cheveux
R =sweep(TEC, MARGIN=2,STATS = r,FUN = "/")*100
R =round(addmargins(R,FUN =sum),2)[,-5]
R=R
kable(R, caption = "Distribution conditionnelle des couleurs des yeux sachant la couleur des cheveux") #21
#Tableau des effectifs theoriques
TET =round(chisq.test(TEC)$expected,2)
kable(TET)
#Test du khi2
chisq.test(TEC)
#Tableau des effectifs theoriques
TET =round(chisq.test(TEC)$expected,2)
kable(TET)
#Test du khi2
chisq.test(TEC)
#Test du khi2
chisq.test(TEC)
data <- data.frame(BEPC = c(15,10,15,40), BAC = c(12,18,5,35), Licence
= c(3,4,8,15), Total = c(30,32,28,90))
rownames(data) <- c("Plus de 50 ans", "Entre 30 et 50 ans", "Moins de 30
ans", "Total")
data
kable(data)
data <- data.frame(BEPC = c(15,10,15,40), BAC = c(12,18,5,35), Licence
= c(3,4,8,15), Total = c(30,32,28,90))
rownames(data) <- c("Plus de 50 ans", "Entre 30 et 50 ans", "Moins de 30
ans", "Total")
kable(data)
